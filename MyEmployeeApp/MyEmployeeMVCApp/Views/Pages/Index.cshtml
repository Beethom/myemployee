using System.Text.Json;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Identity.Web;
using Microsoft.Identity.Abstractions;

namespace MyEmployeeMVCApp.Pages;

[AuthorizeForScopes(ScopeKeySection = "DownstreamApi:Scopes")]
public class IndexModel : PageModel
{
    private readonly ILogger<IndexModel>
    _logger;

    private readonly IDownstreamApi  _downstreamWebApi;

    public IndexModel(ILogger<IndexModel>
        logger,
        IDownstreamApi  downstreamWebApi)
        {
        _logger = logger;
        _downstreamWebApi = downstreamWebApi;
        }

        public async Task OnGet()
        {
        using var response = await _downstreamWebApi.CallApiForUserAsync("DownstreamApi").ConfigureAwait(false);
        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
        var apiResult = await response.Content.ReadFromJsonAsync<JsonDocument>
    ().ConfigureAwait(false);
    ViewData["ApiResult"] = JsonSerializer.Serialize(apiResult, new JsonSerializerOptions { WriteIndented = true });
    }
    else
    {
    var error = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
    throw new HttpRequestException($"Invalid status code in the HttpResponseMessage: {response.StatusCode}: {error}");
    }
    }
    }
    <p>Before rendering the page, the Page Model was able to make a call to Microsoft Graph's <code>/me</code> API for your user and received the following:</p>

    <p><pre><code class="language-js">@ViewData["ApiResult"]</code></pre></p>

    <p>Refreshing this page will continue to use the cached access token acquired for Microsoft Graph, which is valid for future page views will attempt to refresh this token as it nears its expiration.</p>
